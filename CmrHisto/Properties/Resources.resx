<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClickHere" xml:space="preserve">
    <value>click here</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Gradient" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\gradient.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LoadScaleFromFileOverrideWarning" xml:space="preserve">
    <value>You have selected to load a scale from a file. That option will be overridden if you select auto scale for that axis.</value>
  </data>
  <data name="LogMissingEctPid" xml:space="preserve">
    <value>No ECT PID found, ECT limiting options have been disabled.</value>
  </data>
  <data name="LogMissingRatioCalculationPid" xml:space="preserve">
    <value>Your log did not contain any PIDs that will allow for PRATIO calculation. You must select a PID to use for the Y axis.

</value>
  </data>
  <data name="LogMissingRatioPid" xml:space="preserve">
    <value>Your log did not contain the PRATIO or P-RATIO MAP/BARO PIDs. P-Ratio will be calculated using AVG MAP TO USE / Baro.

</value>
  </data>
  <data name="MessageBoxCustomPidError" xml:space="preserve">
    <value>Custom PID Error</value>
  </data>
  <data name="MessageBoxDataError" xml:space="preserve">
    <value>Data Error!</value>
  </data>
  <data name="MessageBoxEctError" xml:space="preserve">
    <value>ECT Error!</value>
  </data>
  <data name="MessageBoxFileError" xml:space="preserve">
    <value>File Error!</value>
  </data>
  <data name="MessageBoxGeneralError" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="MessageBoxInvalidScale" xml:space="preserve">
    <value>You must enter a valid number greater than 1 into the box.</value>
  </data>
  <data name="MessageBoxPidAddedError" xml:space="preserve">
    <value>Custom PID Added</value>
  </data>
  <data name="MessageBoxPidNotFoundError" xml:space="preserve">
    <value>PID Error!</value>
  </data>
  <data name="MessageBoxProcessingError" xml:space="preserve">
    <value>Processing Error!</value>
  </data>
  <data name="MessageBoxScaleError" xml:space="preserve">
    <value>Scale Error!</value>
  </data>
  <data name="MessageBoxValueScaleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="MessageExistingPidError" xml:space="preserve">
    <value>Custom PID Already Exists!</value>
  </data>
  <data name="One" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="PleaseWaitForSurfaceMap" xml:space="preserve">
    <value>Please wait while the surface map is built.</value>
  </data>
  <data name="TextureCoodinatesNotUploaded" xml:space="preserve">
    <value>Texture coordinate array not uploaded correctly</value>
  </data>
  <data name="VersionCheckError" xml:space="preserve">
    <value>There was an error checking the version, please try again later.</value>
  </data>
  <data name="VersionNotCurrent" xml:space="preserve">
    <value>"You are running version {0} and the most recent version is {1}. To get the most recent version, "</value>
  </data>
  <data name="VersionUpToDate" xml:space="preserve">
    <value>You have the most up to date version of CmrHisto.</value>
  </data>
  <data name="Zero" xml:space="preserve">
    <value>0</value>
  </data>
</root>